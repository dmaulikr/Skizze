//
//  RotaryDial.m
//  Sketchy
//
//  Created by Michaael May on 18/04/2010.
//  Copyright 2010 Michael May. All rights reserved.
//

#import "RotaryDial.h"

@implementation RotaryDial

@synthesize dialImage;

static inline CGFloat degreesToRadians(CGFloat degrees)
{
    return M_PI * (degrees / 180.0);
}

#pragma mark -

-(void)rotateByDegrees:(NSInteger)rotationDegrees {
	degrees = ((degrees + rotationDegrees) % 360);
	
	NSLog(@"rotateByDegrees:%d", degrees);		
	
	[self setNeedsDisplay];
}

#pragma mark -

#define ScaleRect(rect,scale) CGRectMake(rect.origin.x + (rect.size.width * ((1.0-scale) / 2.0)), rect.origin.y + (rect.size.height * ((1.0-scale) / 2.0)), rect.size.width * scale, rect.size.height * scale)

// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
	[super drawRect:rect];
	
	NSLog(@"drawRect");
	
	CGContextRef context = UIGraphicsGetCurrentContext();
	
	if (context) {			
		CGContextSaveGState(context);
		
		CGContextTranslateCTM(context, roundf(self.frame.size.width / 2.0), roundf(self.frame.size.height / 2.0));		
		CGContextRotateCTM(context, degreesToRadians(degrees));
		CGContextTranslateCTM( context, -roundf(self.frame.size.width / 2.0), -roundf(self.frame.size.height / 2.0));
		
		rect = ScaleRect(rect, 0.60);
		CGContextDrawImage(context, rect, dialImage.CGImage);
				
		CGContextRestoreGState(context);
	}
}

- (void)dealloc {
	[dialImage release];
	
    [super dealloc];
}


@end
